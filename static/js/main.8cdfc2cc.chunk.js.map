{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","posts","setPosts","city","setCities","useEffect","axios","get","then","res","newPosts","data","className","id","JSON","stringify","weather","main","temp","humidity","onChange","event","target","value","document","getElementById","innerText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2QA4CeA,MAzCf,WAAgB,IAAD,EACWC,IAAMC,SAAS,MAD1B,mBACRC,EADQ,KACDC,EADC,OAEWH,IAAMC,UAAS,GAF1B,mBAERG,EAFQ,KAEFC,EAFE,KAgBb,OAPAL,IAAMM,WAAU,WACdC,IAAMC,IAAN,4DAA+DJ,EAA/D,yDACGK,MAAK,SAAAC,GACJ,IAAMC,EAAWD,EAAIE,KACrBT,EAASQ,QAEZ,CAACP,IAEF,sBAAKS,UAAU,MAAf,UACE,6CACA,oBAAIC,GAAG,UACNZ,EAAQ,2CAAca,KAAKC,UAAUd,EAAMe,QAAQ,GAAGC,SAAa,UACnEhB,EAAQ,8CAAiBa,KAAKC,UAAUd,EAAMgB,KAAKC,SAAa,UAChEjB,EAAQ,2CAAca,KAAKC,UAAUd,EAAMgB,KAAKE,aAAiB,UAClE,yBAAQC,SApBZ,SAAmBC,GACjBjB,EAAUiB,EAAMC,OAAOC,OACvBnB,EAAYiB,EAAMC,OAAOC,MACbC,SAASC,eAAe,SAC9BC,UAAYtB,GAgBhB,UACE,6CACA,8CACA,+CACA,gDACA,gDACA,gDACA,gDACA,4CACA,+CACA,4CACA,gDACA,qDC1BOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASC,eAAe,SAM1BE,M","file":"static/js/main.8cdfc2cc.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  let [posts, setPosts] = React.useState(null);\n  let [city, setCities] = React.useState(true);\n  function selectBox(event){\n    setCities(event.target.value);\n    setCities = event.target.value\n    var hello = document.getElementById('hello');\n    hello.innerText = setCities ;\n    }\n  React.useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=901d672d14c778eefb41af3fd3871f1f&units=metric`)\n      .then(res => {\n        const newPosts = res.data;\n        setPosts(newPosts);\n      });\n  }, [city]);\n  return (\n    <div className=\"App\">\n      <h1>Weather App</h1>\n      <h3 id=\"hello\"></h3>\n      {posts ? <p>Weather : {JSON.stringify(posts.weather[0].main)}</p> : 'loading'}\n      {posts ? <p>Temperature: {JSON.stringify(posts.main.temp)}</p> : 'loading'}\n      {posts ? <p>Humidity: {JSON.stringify(posts.main.humidity)}</p> : 'loading'}\n      <select onChange={selectBox}>\n        <option>Karachi</option>\n        <option>Peshawar</option>\n        <option>Islamabad</option>\n        <option>Abbottabad</option>\n        <option>Faisalabad</option>\n        <option>Rawalpindi</option>\n        <option>Gujranwala</option>\n        <option>Multan</option>\n        <option>Hyderabad</option>\n        <option>Quetta</option>\n        <option>Bahawalpur</option>\n        <option>Sargodha</option>\n      </select>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}